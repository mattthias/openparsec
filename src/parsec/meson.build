
include_dirs = include_directories('../libparsec/include', '../parsec_server/include', '../parsec/include', '../libraries')

sdl_dep = dependency('SDL2')
sdlmixer_dep = dependency('SDL_mixer') 
gl_dep = dependency('GL') 


sources = [
'aud_bkgn.cpp',
'aud_comm.cpp',
'aud_game.cpp',
'aud_glob.cpp',
'aud_sdlmixer.cpp',
'aud_supp.cpp',
'con_act.cpp',
'con_aux.cpp',
'con_cani.cpp',
'con_com.cpp',
'con_conf.cpp',
'con_ext.cpp',
'con_geom.cpp',
'con_info.cpp',
'con_int.cpp',
'con_kmap.cpp',
'con_list.cpp',
'con_load.cpp',
'con_main.cpp',
'con_path.cpp',
'con_rc.cpp',
'con_say.cpp',
'con_shad.cpp',
'con_std.cpp',
'con_tani.cpp',
'd_glob.cpp',
'd_misc.cpp',
'do_bmap.cpp',
'do_font.cpp',
'do_iter.cpp',
'do_misc.cpp',
'do_patch.cpp',
'e_callbk.cpp',
'e_colani.cpp',
'e_color.cpp',
'e_demo.cpp',
'e_draw.cpp',
'e_events.cpp',
'e_getopt.cpp',
'e_global.cpp',
'e_level.cpp',
'e_loader.cpp',
'e_mouse.cpp',
'e_record.cpp',
'e_replay.cpp',
'e_shader.cpp',
'e_supp.cpp',
'e_texani.cpp',
'e_vtxani.cpp',
'g_boot.cpp',
'g_bot_cl.cpp',
'g_camera.cpp',
'g_cloud.cpp',
'g_explod.cpp',
'g_gameloop.cpp',
'g_global.cpp',
'g_laser.cpp',
'g_planet.cpp',
'g_sfx.cpp',
'g_shkwav.cpp',
'g_stars.cpp',
'g_stgate.cpp',
'g_supp.cpp',
'g_swarm.cpp',
'g_vapor.cpp',
'g_wfx.cpp',
'h_cockpt.cpp',
'h_drwhud.cpp',
'h_frmplt.cpp',
'h_global.cpp',
'h_radar.cpp',
'h_strmap.cpp',
'h_supp.cpp',
'h_text.cpp',
'img_3df.cpp',
'img_api.cpp',
'img_conv.cpp',
'img_jpg.cpp',
'img_load.cpp',
'img_supp.cpp',
'img_tga.cpp',
'inp_comm.cpp',
'inp_glob.cpp',
'inp_init.cpp',
'inp_sdl.cpp',
'inp_user.cpp',
'isdl_joy.cpp',
'isdl_mouse.cpp',
'isdl_supp.cpp',
'm_button.cpp',
'm_list.cpp',
'm_logo.cpp',
'm_main.cpp',
'm_option.cpp',
'm_status.cpp',
'm_viewer.cpp',
'net_conn.cpp',
'net_game.cpp',
'net_game_gmsv.cpp',
'net_game_peer.cpp',
'net_glob.cpp',
'net_gmsv.cpp',
'net_pckt.cpp',
'net_pckt_peer.cpp',
'net_peer.cpp',
'net_prediction.cpp',
'net_rmev.cpp',
'net_rmev_gmsv.cpp',
'net_rmev_peer.cpp',
'net_serv.cpp',
'net_udp.cpp',
'net_univ.cpp',
'net_util_cl.cpp',
'nl_udp.cpp',
'nw_udp.cpp',
'obj_ani.cpp',
'obj_coll.cpp',
'obj_comm.cpp',
'obj_ctrl.cpp',
'obj_expl.cpp',
'obj_game.cpp',
'obj_iter.cpp',
'obj_part.cpp',
'obj_vani.cpp',
'obj_xtra.cpp',
'part_ani.cpp',
'part_api.cpp',
'part_def.cpp',
'part_sys.cpp',
'r_glob.cpp',
'ro_api.cpp',
'ro_obj.cpp',
'ro_part.cpp',
'ro_patch.cpp',
'ro_perf.cpp',
'ro_poly.cpp',
'ro_sfx.cpp',
'ro_supp.cpp',
'sl_err.cpp',
'sl_main.cpp',
'sl_msg.cpp',
'sl_opt.cpp',
'snd_api.cpp',
'snd_wav.cpp',
'sys_bind.cpp',
'sys_conv.cpp',
'sys_glob.cpp',
't_pack.cpp',
'vid_glob.cpp',
'vid_init.cpp',
'vid_plug.cpp',
'vid_supp.cpp',
'vsdl_buffo.cpp',
'vsdl_inito.cpp',
'vsdl_ogl.cpp',
'vsdl_suppo.cpp'
]

libparsec_sources = [
'../libparsec/con_arg.cpp',
'../libparsec/con_tab.cpp',
'../libparsec/con_vald.cpp',
'../libparsec/debug.cpp',
'../libparsec/e_modulemanager.cpp',
'../libparsec/e_relist.cpp',
'../libparsec/g_emp.cpp',
'../libparsec/g_extra.cpp',
'../libparsec/g_telep.cpp',
'../libparsec/net_pckt_gmsv.cpp',
'../libparsec/net_stream.cpp',
'../libparsec/net_swap.cpp',
'../libparsec/net_util.cpp',
'../libparsec/net_wrap.cpp',
'../libparsec/obj_clas.cpp',
'../libparsec/obj_creg.cpp',
'../libparsec/obj_cust.cpp',
'../libparsec/obj_odt.cpp',
'../libparsec/obj_type.cpp',
'../libparsec/sl_path.cpp',
'../libparsec/sl_timer.cpp',
'../libparsec/sw_path.cpp',
'../libparsec/sw_timer.cpp',
'../libparsec/sys_date.cpp',
'../libparsec/sys_file.cpp',
'../libparsec/sys_swap.cpp',
'../libparsec/utl_bsp.cpp',
'../libparsec/utl_clip.cpp',
'../libparsec/utl_clpo.cpp',
'../libparsec/utl_cull.cpp',
'../libparsec/utl_logfile.cpp',
'../libparsec/utl_math2.cpp',
'../libparsec/utl_math.cpp'
]

#libparsec = library('parsec', 
#                    libparsec_sources,
#                    include_directories : include_dirs,
#                    dependencies: ncurses_dep,
#                    cpp_args : '-DPARSEC_SERVER')

executable('parsec', 
          [sources,libparsec_sources],
          include_directories : include_dirs,
          dependencies: [sdlmixer_dep, sdl_dep, gl_dep],
          link_with: libglew,
          cpp_args: '-DPARSEC_CLIENT'
          )



